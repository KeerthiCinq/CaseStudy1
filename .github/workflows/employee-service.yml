name: Build and Deploy Employee Service

on:
  push:
    branches:
      - main
      - qa
      - develop
    paths:
      - 'employee-service/**'       # Trigger when files in api-gateway folder change
      - 'helmcharts/employee-service/**'        

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set BRANCH environment variable
        run: echo "BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Set environment dynamically
        id: set-env
        run: |
          if [[ "${BRANCH}" == "main" ]]; then
            echo "env=prod" >> $GITHUB_OUTPUT
          elif [[ "${BRANCH}" == "qa" ]]; then
            echo "env=qa" >> $GITHUB_OUTPUT
          elif [[ "${BRANCH}" == "dev" ]]; then
            echo "env=dev" >> $GITHUB_OUTPUT
          else
            echo "No match found for branch"
          fi
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image 
        env: 
          IMAGE_TAG: "${{ secrets.EMPLOYEE_ECR_REPOSITORY }}:employee-service-${{ github.sha }}" 
        run: |
          docker build -t $IMAGE_TAG -f employee-service/Dockerfile employee-service

      - name: Push Docker image to ECR 
        env: 
          IMAGE_TAG: "${{ secrets.EMPLOYEE_ECR_REPOSITORY }}:employee-service-${{ github.sha }}" 
        run: | 
          docker push $IMAGE_TAG

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name demo-cluster --region ${{ secrets.AWS_REGION }}

      - name: Check Kubernetes config
        run: |
          cat ~/.kube/config
          kubectl cluster-info

      - name: Deploy Employee Service with Helm
        run: |
          ClusterEnv=${{ steps.set-env.outputs.env }}
          NAMESPACE=${ClusterEnv}
          helm upgrade --install employee-service helmcharts/employee-service \ 
            --namespace ${NAMESPACE} \
            --set image.tag=employee-service-${{ github.sha }}
